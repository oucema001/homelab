---
- name: Define local-storage StorageClass
  kubernetes.core.k8s:
    server_side_apply:
      field_manager: ansible
    kind: StorageClass
    api_version: v1
    name: local-storage
    definition:
      provisioner: kubernetes.io/no-provisioner
      volumeBindingMode: WaitForFirstConsumer
      reclaimPolicy: Retain
      allowVolumeExpansion: true

- name: Define local-storage PersistentVolumes for cross-namespace access
  kubernetes.core.k8s:
    server_side_apply:
      field_manager: ansible
    definition:
      - kind: Namespace
        api_veresion: v1
        metadata:
          name: "{{ item[0] }}"
      - kind: PersistentVolume
        api_version: v1
        metadata:
          name: "{{ item[1].name }}-{{ item[0] }}"
          finalizers:
            - kubernetes.io/pv-protection
        spec:
          capacity:
            storage: "{{ item[1].size }}"
          volumeMode: Filesystem
          accessModes:
            - ReadWriteOnce
          persistentVolumeReclaimPolicy: Retain
          storageClassName: local-storage
          local:
            path: "{{ item[1].path }}"
          nodeAffinity:
            required:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - parche
      - kind: PersistentVolumeClaim
        api_version: v1
        metadata:
          name: "{{ item[1].name }}"
          namespace: "{{ item[0] }}"
          finalizers:
            - kubernetes.io/pvc-protection
        spec:
          volumeMode: Filesystem
          accessModes:
            - ReadWriteOnce
          storageClassName: local-storage
          volumeName: "{{ item[1].name }}-{{ item[0] }}"
          resources:
            requests:
              storage: "{{ item[1].size }}"
  loop: "{{ storage.namespaces | product(storage.volumes) }}"
  when:
    - item[0] == (item[1].namespace|default(item[0]))
    - not query('kubernetes.core.k8s', api_version='v1', namespace=item[0], kind='PersistentVolume', resource_name=item[1].name+'-'+item[0])
