crds:
  install: true

global:
  env:
    - name: TZ
      value: America/New_York

configs:
  cm:
    kustomize.buildOptions: '--enable-helm --enable-alpha-plugins --enable-exec'
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs


  params:
    redis.server: redis-master.db:6379
    server.insecure: "true"
    server.disable.auth: "true"
  ssh:
    extraHosts: |
      parche ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCS+wNspim6FJ0/IUbOKqXhiFBQjHcAnVHGGgk9dCepnvQ2EcqJoyRTs8doVVqttM+vEGziTis3e9pEg8N9ij4o=
      parche ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDRuyv4HK9ZjnXo4RxZcnV/a4tySL7XfxzxlGuC7aVWqtDGFYkbagndzvl/oz8m3I/87Hd2qwQVlAonjrgRSkpKEI+OZ6tZML6cPCb4eKCIwpJXgxMpGrlgXV1I572UY/WxibL3amlYLxv0e54QMxFs7cKN44+T/B93Pdu2PXgTZ6BIDGp8tnW2nBM4DsH0Fuxmw9U8TR8fjNhsbDafzT6NrUTjqYTnBlY2MtNp2r/D63e17D5fp9++OeJ9zo8B7imLZIIVrZsPl5T8mEefDlG4jblUYkRrwwyASipZGMIoCGfhPaIYKez7jfxrK9F9AhEeMDN+StNNZq3rMM/cFceN8h4jgD3Nrdtb7vPwJnr7cyW0XuLVwkbrhosXKZ+9gmJHy1AsQGGxcOT95fD3YGfxtidW4pLqwDYn1Uj4YmQwk0QXFZl9RxcUZo/B+6sUqB1GxRL6qhMcm5V0+a4y/ZMtMOqWzQcP6NNfg5TLeimAF0N+JtayLB8WuEFeUSaiAqU=
      parche ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMcNbj3FqmFJ6B4gSmjO0OKuwr9JW6E4rqhChxFf1owu

controller:
  ## Application controller metrics configuration
  metrics:
    # -- Deploy metrics service
    enabled: true
    applicationLabels:
      enabled: true
    serviceMonitor: &service-monitor
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack

## Dex
dex:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor

## Redis
redis:
  enabled: false

## Server
server:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor

  ingress:
    enabled: true
    annotations:
      cert-manager.io/common-name: &host argocd.seawolf.hermleigh.home
      cert-manager.io/subject-countries: US
      cert-manager.io/subject-organizations: "HERMLEIGH.HOME"
      cert-manager.io/subject-organizationalunits: "Kubernetes Cluster"
      cert-manager.io/private-key-algorithm: ECDSA
      cert-manager.io/private-key-size: "384"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: "Infrastructure"
      gethomepage.dev/icon: argocd.png
      gethomepage.dev/description: "GitOps Cluster Dashboard"
      gethomepage.dev/name: ArgoCD
    ingressClassName: nginx
    hostname: *host
    tls: true

repoServer:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: sops-age-key
      secret:
        secretName: sops-age-key

  initContainers:
    - name: install-ksops
      image: viaductoss/ksops:v4.2.1
      command: ["/bin/sh", "-c"]
      args:
        - echo "Installing KSOPS...";
          mv ksops /custom-tools/;
          mv kustomize /custom-tools/;
          echo "Done.";
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  volumeMounts:
    - mountPath: /usr/local/bin/kustomize
      name: custom-tools
      subPath: kustomize
    - mountPath: /home/argocd/.config/kustomize/plugin/viaduct.ai/v1/ksops/ksops
      name: custom-tools
      subPath: ksops
    - mountPath: /home/argocd/.config/sops/age
      name: sops-age-key
  env:
    - name: SOPS_AGE_KEY_FILE
      value: /home/argocd/.config/sops/age/keys.txt
    - name: XDG_CONFIG_HOME
      value: /home/argocd/.config
    - name: KUSTOMIZE_PLUGIN_HOME
      value: /home/argocd/.config/kustomize/plugin

applicationSet:
  enabled: false

## Notifications controller
notifications:
  enabled: false
  metrics:
    enabled: false
    serviceMonitor: *service-monitor
